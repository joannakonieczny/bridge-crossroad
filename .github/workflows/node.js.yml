# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI (Testing if next.js app works)

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          cache-dependency-path: next-app/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: next-app
      - name: Create dummy .env file
        run: |
          echo "MONGODB_URI=MONGODB_URI" >> .env
          echo "MONGODB_DB_NAME=MONGODB_DB_NAME" >> .env
          echo "AWS_REGION=AWS_REGION" >> .env
          echo "AWS_ACCESS_KEY_ID=AWS_ACCESS_KEY_ID" >> .env
          echo "AWS_SECRET_ACCESS_KEY=AWS_SECRET_ACCESS_KEY" >> .env
          echo "AWS_S3_BUCKET_NAME=AWS_S3_BUCKET_NAME" >> .env
          echo "AWS_SESSION_TOKEN=AWS_SESSION_TOKEN" >> .env
        working-directory: next-app
      - name: Build
        run: npm run build
        working-directory: next-app
      - name: Test
        run: npm test
        working-directory: next-app
